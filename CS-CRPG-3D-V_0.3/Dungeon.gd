extends Spatial

export (PackedScene) var Room
export (PackedScene) var Passage
export (PackedScene) var Base

var dungeon = {
	1:[]
}

var playerspawn = Vector3()
var return_to = Vector3()

# Called when the node enters the scene tree for the first time.
func _ready():
	pass # Replace with function body.


func seter(re, s):
	seed(s)
	return_to = re
	mapSetup((1))
	return_to = re
	pass


func mapSetup(floors):
	
	for x in range(1, floors+1):
		var roll = randi() % len(templates)
		dungeon[1] = templates[roll]
		#floorStart(30,20,x)
	floor_build(1)
	pass


func floorStart(sizeX, sizeY, level):
	for x in range(0, sizeX):
		dungeon[level].append([])
		for y in range(0, sizeY):
			if x <= 1 or x >= sizeX-1 or y <= 1 or y >= sizeY-1:
				dungeon[level][-1].append("#")
			else:
				dungeon[level][-1].append(".")
				
	dungeon[level][int(sizeX/2)][int(sizeY/2)] = ">"

var re

func floor_build(level):
	var x = 0
	var y = 0
	var tile = Base.instance()
	for l in dungeon[level]:
		y = 0
		for t in l:
			if "." in t:
				print(t)
				tile = Room.instance()
				tile.config(t, self, level, x, y)
			elif  "+" in t:
				print(t)
				tile = Passage.instance()
				tile.config(t,self, level, x, y)
			elif  ">" in t:
				print(t)
				tile = Room.instance()
				var red = tile.config(t, self, level, x, y)
				if red == "n":
					re = [x, y-1]
				elif red == "e":
					re = [x+1, y]
				elif red == "s":
					re = [x, y+1]
				elif red == "w":
					re = [x-1, y]
				playerspawn = Vector3((re[0] * 4) + 3 ,  -16 - (4 * level), (re[1] * 4) + 3)
				tile.setup(return_to)
			elif  "#" in t:
				print(t)
				tile = Base.instance()
			else:
				print("Elsed: " + t)
				tile = Base.instance()
				
			
			# Place tile
			self.add_child(tile)
			tile.set_trans(x*4, 4 - (4 * level), y*4)
			
			
			y += 1
		x += 1


func set_trans(y):
	translate(Vector3(0,y,0))

# Called every frame. 'delta' is the elapsed time since the previous frame.
#func _process(delta):
#	pass

var templates = [[
	["#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#"],
	["#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#"],
	["#","#","#","#","#","#","#","#","+t","+","+t","#","#","#","#","#","#","#","#","#"],
	["#","#","#","#","#","#","#","#","+",".","+","#","#","#","#","#","#","#","#","#"],
	["#","#","#",".",".",".",".","#","+",".","+","#","#","#","#","#","#","#","#","#"],
	["#","#","#",".",".t",".",".","#","+t","+","+t","#","#","#","#","#",".",".",".","#"],
	["#","#","#",".",".",".",".","#","#","+","#","#","#","#","#","#",".",".t",".c","#"],
	["#","#","#","#","+","#","#","#",".",".",".","+","+","+","#","#",".",".",".","#"],
	["#",".t",".","#","+","#","#","#",".",".",".","#","#","+","#","#","#","+","#","#"],
	["#",".",".","+","+","+","+","+",".",">",".","#","#","+","#","#","#","+","#","#"],
	["#",".",".","#","+","#","+","#",".",".",".","#",".t",".",".t","#","#","+","#","#"],
	["#",".",".",".",".","#","+","#","#","#","#","#",".",".",".","+","+","+","#","#"],
	["#",".t",".",".",".t","#","+","#","#","#","#","#",".t",".",".t","#","#","+","#","#"],
	["#","#","+","#","#","#","+","#","#","#","#","#","#","#","#","#","#","+","#","#"],
	["#","#","+","#","#","#","+","#","#","#","#","#","#","#","#","#","#","+","#","#"],
	["#","#","+","#","#",".",".","#",".",".",".","#","#","#","#",".",".",".","#","#"],
	["#","#",".",".","+",".",".","#",".","t.","+","+","+","+","+",".",".c",".","#","#"],
	["#","#",".",".c","#",".",".","#",".",".",".","#","#","#","#",".t",".",".","#","#"],
	["#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#"],
	["#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#"]
],[
	["#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#"],
	["#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#"],
	["#","#","#","#","#","#","#","+","+","+","+","+","#","#","#","#","#","#","#","#"],
	["#","#","#","#","#","#","#","+","+t",".","+t","+","#","#","#","#","#","#","#","#"],
	["#","#","#",".",".",".","+","+",".",".",".","+","#","#","#","#","#","#","#","#"],
	["#","#","#",".",".t",".","#","+",".",".",".","+","#","#","#","#",".",".",".","#"],
	["#","#","#",".",".",".","#","+","+","+","+","+","#","#","+","+",".","+t",".","#"],
	["#","#","#","#","+","#","#","+",".",".",".","+","+","+","+","#",".",".",".","#"],
	["#",".",".","#","+","#","#","+",".",".",".","+","#","#","#","#","#","+","#","#"],
	["#",".c",".","+","+","+","+","+",".",">",".","+","#",".",".",".","#","+","#","#"],
	["#",".",".","#","+","#","+","+",".",".",".","+",".",".",".t",".","#","+","#","#"],
	["#",".",".",".",".","#","+","+","+t",".","+t","+","#",".",".",".","+","+",".","#"],
	["#",".t",".",".t",".","#","+","+","+","+","+","+","#",".",".",".","+","#","#","#"],
	["#","#","+","#","#","#","+","#","#","#","#","#","#","#","#","#","+","#","#","#"],
	["#","#","+","#","#","#","+","#","#","#","#","#","#","#","#",".",".",".","#","#"],
	["#","#","+","#","#",".",".","#",".",".",".","#","#","#","#",".",".t",".","#","#"],
	["#",".",".",".","+",".",".","#",".c",".","+","+","+","+","+",".",".",".","#","#"],
	["#",".",".t",".","#",".",".","#",".",".",".","#","#","#","#",".",".",".","#","#"],
	["#",".",".",".","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#"],
	["#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#","#"]
	
]




]


